<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>works.reload.parent</groupId>
		<artifactId>versions</artifactId>
		<version>${revision}${changelist}</version>
		<relativePath>./versions/pom.xml</relativePath>
	</parent>

	<groupId>works.reload</groupId>
	<artifactId>parent</artifactId>
	<packaging>pom</packaging>
	<name>Parent</name>
	<description>Global configurations for java projects and code validation tools</description>

	<properties>
		<!-- project version -->
		<revision>1.2.0</revision>
		<changelist>-SNAPSHOT</changelist>
		<!-- dependencyManagement versions -->
		<jetbrains-annotations.version>24.1.0</jetbrains-annotations.version>
		<spotbugs-annotations.version>4.8.4</spotbugs-annotations.version>
		<hamcrest.version>2.2</hamcrest.version>
		<junit.version>5.10.2</junit.version>
		<mockito.version>5.11.0</mockito.version>
		<!-- pluginManagement -->
		<maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
		<maven-surefire-report-plugin.version>3.2.5</maven-surefire-report-plugin.version>
		<maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
		<maven-source-plugin.version>3.3.1</maven-source-plugin.version>
		<maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
		<maven-shade-plugin.version>3.5.2</maven-shade-plugin.version>
		<editorconfig-maven-plugin.version>0.1.3</editorconfig-maven-plugin.version>
		<maven-pmd-plugin.version>3.21.2</maven-pmd-plugin.version>
		<pmd-core.version>6.55.0</pmd-core.version>
		<pmd-java.version>6.55.0</pmd-java.version>
		<spotbugs-maven-plugin.version>4.8.4.0</spotbugs-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
		<checkstyle.version>10.15.0</checkstyle.version>
		<maven-project-info-reports-plugin.version>3.5.0</maven-project-info-reports-plugin.version>
		<maven-jxr-plugin.version>3.3.2</maven-jxr-plugin.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
		<pitest-maven.version>1.16.0</pitest-maven.version>
		<pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
		<versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
		<maven-wrapper.version>3.2.0</maven-wrapper.version>
	</properties>

	<modules>
		<module>versions</module>
		<module>configs</module>
	</modules>

	<pluginRepositories>
		<pluginRepository>
			<id>reload-repo</id>
			<url>https://nexus.reloadkube.managedservices.resilient-teched.com/repository/reload/</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jetbrains</groupId>
				<artifactId>annotations</artifactId>
				<version>${jetbrains-annotations.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-annotations</artifactId>
				<version>${spotbugs-annotations.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-bom</artifactId>
				<version>${mockito.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.wrapper</groupId>
				<artifactId>maven-wrapper</artifactId>
				<version>${maven-wrapper.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<!-- version from Versions pom -->
					<configuration>
						<parallel>all</parallel>
						<includes>
							<include>**/*Tests.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-report-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<parallel>all</parallel>
						<includes>
							<include>**/*IT.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<!-- Do not report "missing" (with that, we could also just specify "all"). -->
						<doclint>accessibility,html,reference,syntax</doclint>
						<failOnError>true</failOnError>
						<failOnWarnings>true</failOnWarnings>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.ec4j.maven</groupId>
					<artifactId>editorconfig-maven-plugin</artifactId>
					<version>${editorconfig-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>check</id>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven-pmd-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>net.sourceforge.pmd</groupId>
							<artifactId>pmd-core</artifactId>
							<version>${pmd-core.version}</version>
						</dependency>
						<dependency>
							<groupId>net.sourceforge.pmd</groupId>
							<artifactId>pmd-java</artifactId>
							<version>${pmd-java.version}</version>
						</dependency>
						<dependency>
							<groupId>works.reload.parent</groupId>
							<artifactId>configs</artifactId>
							<version>${revision}${changelist}</version>
						</dependency>
					</dependencies>
					<configuration>
						<analysisCache>true</analysisCache>
						<rulesets>
							<ruleset>config/pmd-ruleset.xml</ruleset>
						</rulesets>
						<includeTests>true</includeTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>${spotbugs-maven-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>works.reload.parent</groupId>
							<artifactId>configs</artifactId>
							<version>${revision}${changelist}</version>
						</dependency>
					</dependencies>
					<configuration>
						<excludeFilterFile>config/spotbugs-exclude.xml</excludeFilterFile>
						<effort>max</effort>
						<threshold>low</threshold>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
						<dependency>
							<groupId>works.reload.parent</groupId>
							<artifactId>configs</artifactId>
							<version>${revision}${changelist}</version>
						</dependency>
					</dependencies>
					<configuration>
						<configLocation>config/checkstyle.xml</configLocation>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven-project-info-reports-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${maven-jxr-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${cobertura-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest-maven.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.pitest</groupId>
							<artifactId>pitest-junit5-plugin</artifactId>
							<version>${pitest-junit5-plugin.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-test-resources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.9.6</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
					<!--
						Banned dependencies are not allowed in the project, and may cause build failures or unexpected behavior.
						This is due to conflicts between banned dependencies and existing project dependencies.
						For example, a banned dependency may be an older version of a project dependency,
						but with a different groupId or artifactId, making it difficult for Maven to detect the conflict
						and choose the correct dependency.
					-->
					<execution>
						<id>enforce-banned-dependencies-from-base</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<bannedDependencies>
									<excludes>
										<!-- We use com.github.spotbugs, the successor of FindBugs. -->
										<exclude>com.google.code.findbugs</exclude>
										<!-- We use org.junit.jupiter; previous versions (i.e. JUnit 4) should never be referenced. -->
										<exclude>junit</exclude>
									</excludes>
									<includes>
										<!-- SpotBugs still references the jsr305 Artifact from the original FindBugs. -->
										<include>com.google.code.findbugs:jsr305</include>
									</includes>
								</bannedDependencies>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>>integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactId>${project.name}</shadedArtifactId>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<outputFile>${project.build.directory}/${project.build.finalName}-shaded.jar</outputFile>
							<artifactSet>
								<excludes>
									<exclude>com.github.spotbugs:spotbugs-annotations</exclude>
								</excludes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>*</artifact>
									<excludes>
										<exclude>META-INF/**</exclude>
										<exclude>javax/**</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.ec4j.maven</groupId>
				<artifactId>editorconfig-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<executions>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<failOnViolation>true</failOnViolation>
							<printFailingErrors>true</printFailingErrors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<executions>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<configuration>
					<excludeProperties>changelist</excludeProperties>
					<ruleSet>
						<rules>
							<!-- We'll upgrade to PMD 7 once it's released. -->
							<rule>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-core</artifactId>
								<ignoreVersions>
									<ignoreVersion>
										<type>regex</type>
										<version>7.0.0-rc.*</version>
									</ignoreVersion>
								</ignoreVersions>
							</rule>
							<rule>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-java</artifactId>
								<ignoreVersions>
									<ignoreVersion>
										<type>regex</type>
										<version>7.0.0-rc.*</version>
									</ignoreVersion>
								</ignoreVersions>
							</rule>
						</rules>
					</ruleSet>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<additionalOptions>-package</additionalOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<report>ci-management</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>dependency-info</report>
							<report>dependency-management</report>
							<report>distribution-management</report>
							<report>index</report>
							<report>issue-management</report>
							<report>licenses</report>
							<report>mailing-lists</report>
							<report>modules</report>
							<report>plugin-management</report>
							<report>plugins</report>
							<report>team</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<!--
				 Pitest's reports are always copied when goal `site` is called, but gives an exception
				 when the reports are not generated.
				 This profile activates the plugin only when the reports exist.
				 Reports can be generated by running `test-compile org.pitest:pitest-maven:mutationCoverage`
			-->
			<id>Site-SkipPitestWhenNoReport</id>
			<activation>
				<file>
					<missing>target/pit-reports</missing>
				</file>
			</activation>

			<reporting>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>
</project>
